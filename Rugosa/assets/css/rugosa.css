@keyframes growfadein {
	from {transform: scale(0.5); opacity: 0}
	to {transform: scale(1); opacity: 1;}
}

@keyframes fadein {
	from {opacity: 0}
	to {opacity: 1;}
}

@keyframes shrinkfadeout {
	from {transform: scale(1); opacity: 1}
	to {transform: scale(0.5); opacity: 0;}
}

:root {
	--rugosa-pink: #fae;
}

html {
	font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, sans-serif;
	font-size: 11pt;
}

span.rugosa {
	display: inline-block;
	background-image: url('/Rugosa/assets/img/rugosa.png');
	background-size: 100% 100%;
	min-width: 1em;
	min-height: 1em;
}

/* Panels and Form Elements */

.panels .panel {
	height: 0px;
	overflow: hidden;
}

.panels .panel.default {
	height: auto;
}

.panels .panel:target ~ .panel.default {
	height: 0px;
	overflow: hidden;
}

.panels .panel:target {
	height: auto;
}

form label {
	display: block;
	margin-bottom: 10px;
}

input[type='text'], textarea {
	width: 100%;
	padding: 0.25em;
	box-sizing: border-box;
	font-size: inherit;
	font-family: inherit;
	background-color: #fff;
	border: 1px #ccc solid;
	border-radius: 3px;
}

input[type='checkbox'] {
	width: 1rem;
	height: auto;
}

input[type='checkbox'].switch {
	width: 2rem;
	height: 1rem;
	margin: 0;
	display: inline-block;
	appearance: none;
	border-radius: 0.5rem;
	border: 1px #ccc solid;
	position: relative;
	outline: none;
}

input[type='checkbox'].switch.big {
	width: 2rem;
	height: 2rem;
}

input[type='checkbox'].switch::before {
	content: '';
	width: 50%;
	height: 100%;
	border-radius: 0.5rem;
	background-color: #ccc;
	position: absolute;
	top: 0;
	transform: translateX(0);
	transition: transform 0.2s;
}

input[type='checkbox'].switch:checked {
	background-color: #8bf;
}

input[type='checkbox'].switch:checked::before {
	background-color: #06f;
	transform: translateX(100%);
}

.button, button {
	display: inline-block;
	position: relative;
	padding: 0.5em 1em 0.5em 1em;
	border: 1px #bbb solid;
	border-radius: 3px;
	text-decoration: none;
	color: #000;
	background-color: #ddd;
	cursor: pointer;
	outline: none;
}

.button:active, button:active {
	transform: translate(1px, 1px);
}

.button.red, button.red {
	border: 1px #b00 solid;
	background-color: #c00;
	color: #fff;
}

.button.blue, button.blue {
	border: 1px #06a solid;
	background-color: #07b;
	color: #fff;
}

.rack {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: flex-end;
	margin: 1em 0em 1em 0em;
}

.rack button, .rack .button {
	margin: 0em 0.5em 0em 0.5em;
}

.rack.wide {
	justify-content: space-between;	
}

.rack.wide .button, .rack.wide button{
	margin: 0px;
}

/* Dialogs and Alerts */

dialog {
	display: none;
}

dialog[open] {
    display: block;
    position: absolute;
	top: 25%;
	left: 0;
	right: 0;
    background-color: white;
    padding: 20px;
    border-radius: 6px;
    border: none;
    box-shadow: 2px 2px 3px #000;
	max-width: 800px;
}

dialog::backdrop {
	animation: fadein 0.2s;
    background: rgba(0,0,0,0.7);
}

dialog[animated] {
	animation: growfadein 0.2s;
}

@media screen and (max-width: 800px) {
    dialog[open] {
        width: 80vw;
    }
}

span.alert a.close {
	display: inline-block;
	text-decoration: none;
	color: black;
	padding-left: 10px;
}

span.alert a.close:after {
	content: '\00d7';
}

span.alert {
	display: block;
	width: fit-content;
	border-radius: 3px;
	border-style: solid;
	border-color: #aaa;
	padding: 10px 20px;
	border-width: 2px;
	background-color: #eee;
	color: #000;
	font-weight: 500;
}

span.alert.success {
	border-color: #0a0;
	background-color: #5a5;
}

span.alert.warning {
	border-color: #c94;
	background-color: #fc4;
}

span.alert.critical {
	border-color: #c00;
	background-color: #f33;
}

/* Display Elements */

.hero p {
	font-size: 1.2rem;
}

hr {
	display: block;
	width: 100%;
	height: 2pt;
	border-style: none;
	background-color: #666;
}

.hero {
	width: 100%;
	padding: 2rem;
	box-sizing: border-box;
	background-color: #eee;
}

.hero h1 {
	font-weight: normal;
	font-size: 4rem;
	margin-top: 1rem;
	margin-bottom: 1rem;
}
